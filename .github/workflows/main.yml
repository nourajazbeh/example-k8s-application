name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: nourajaz/example-k8s-application
  IMAGE_TAG: 2.0.0

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Upload Frontend artifacts to S3
        run: |
          aws s3 sync frontend/build s3://$AWS_S3_BUCKET/ --acl public-read

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

  build_and_deploy_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-image:${{ env.IMAGE_TAG }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-image:${{ env.IMAGE_TAG }}
        
      - name: Install Docker on EC2
        run: |
          echo "$SSH_PRIVATE_KEY" > ./private_key.pem
          chmod 600 ./private_key.pem
          ssh -i ./private_key.pem -o StrictHostKeyChecking=no $EC2_HOST "
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo docker run -d -p 80:5000 $DOCKER_USERNAME/backend-image:${IMAGE_TAG}
          "